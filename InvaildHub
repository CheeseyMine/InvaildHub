local player = game.Players.LocalPlayer

local ButtonDB = false

local SelectedPlayer;
local lastLocation;

local espToggle;
local selectABase;
local AutoClickDropper;
local WalkspeedSlider;
local JumpPowerSlider;
local toggleDoorCollide;
local toggleEasyFishBar;
local toggleItemEsp;
local toggleItemFarm;

local function toggleEsp(bool)
	local function createVisuals(target)
		if target:FindFirstChild("ESP") then return end
		local eTorso = target:FindFirstChild("Torso")
		repeat
			task.wait()
			if not game.Players:FindFirstChild(target.Name) then
				return
			end
			if not eTorso then
				eTorso = target:FindFirstChild("Torso")
			end
		until  eTorso

		local highlight = Instance.new("Highlight")
		highlight.FillColor = Color3.fromRGB(255,255,255)
		highlight.FillTransparency = 0.5
		highlight.OutlineTransparency = 0
		highlight.OutlineColor = Color3.fromRGB(255,255,255)
		highlight.Parent = target
		highlight.Name = "ESP"

		local Overhead = Instance.new("BillboardGui")
		local TextLabel = Instance.new("TextLabel")

		Overhead.Parent = target
		Overhead.Name = "ESP"
		Overhead.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
		Overhead.Active = true
		Overhead.Adornee = target:WaitForChild("Torso")
		Overhead.AlwaysOnTop = true
		Overhead.LightInfluence = 1.000
		Overhead.Size = UDim2.new(0, 400, 0, 30)
		Overhead.StudsOffset = Vector3.new(0, 3, 0)

		TextLabel.Parent = Overhead
		TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		TextLabel.BackgroundTransparency = 1.000
		TextLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
		TextLabel.BorderSizePixel = 0
		TextLabel.Size = UDim2.new(1, 0, 1)
		TextLabel.Font = Enum.Font.SourceSans
		TextLabel.Text = target.Name.." | HP: "..math.floor(target.Humanoid.Health).." | Studs: "..math.floor((player.Character.HumanoidRootPart.Position - target.HumanoidRootPart.Position).Magnitude)
		TextLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
		TextLabel.TextScaled = true
		TextLabel.TextSize = 14.000
		TextLabel.TextStrokeTransparency = 0.000
		TextLabel.TextWrapped = true

		task.spawn(function ()
			pcall(function()
				repeat
					task.wait()
					local humrp = player.Character:FindFirstChild("HumanoidRootPart")
					local ehumrp = target:FindFirstChild("HumanoidRootPart")
					if not humrp or not ehumrp then continue end
					TextLabel.Text = target.Name.." | HP: "..math.floor(target.Humanoid.Health).." | Studs: "..math.floor((humrp.Position - ehumrp.Position).Magnitude)
				until not Overhead:IsDescendantOf(target)
			end)
		end)
	end

	if bool then
		for _,plrs in pairs(game.Players:GetPlayers()) do
			if plrs ~= player then
				createVisuals(plrs.Character)

				local conn_;
				conn_ = plrs.CharacterAdded:Connect(function (newChar)
					createVisuals(newChar)
				end)

				task.spawn(function ()
					repeat
						task.wait()
					until not espToggle.CurrentValue
					conn_:Disconnect()
				end)
			end
		end

		local conn_1;
		conn_1 = game.Players.PlayerAdded:Connect(function (newPlr)
			local conn_;
			conn_ = newPlr.CharacterAdded:Connect(function (newChar)
				createVisuals(newChar)
			end)

			task.spawn(function ()
				repeat
					task.wait()
				until not espToggle.CurrentValue
				conn_:Disconnect()
				if conn_1 then
					conn_1:Disconnect()
				end
			end)
		end)
	else
		for _,plrs in pairs(game.Players:GetPlayers()) do
			if plrs ~= player then
				for _,chars in pairs(plrs.Character:GetDescendants()) do
					if chars.Name == "ESP" then
						chars:Destroy()
					end
				end 
			end
		end
	end
end

local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/shlexware/Orion/main/source')))()

local Window = OrionLib:MakeWindow({Name = "Invaild Hub", HidePremium = false, SaveConfig = true, IntroText = "Invaild Hub", ConfigFolder = "InvaildHub"})

local ETTab = Window:MakeTab({
	Name = "Elemental Tycoon",
	Icon = "rbxassetid://4483345998",
	PremiumOnly = false
})

local NTNTab = Window:MakeTab({
	Name = "Nuke Tycoon Nuclear",
	Icon = "rbxassetid://4483345998",
	PremiumOnly = false
})

local YBATab = Window:MakeTab({
	Name = "Your Bizzare Adventure",
	Icon = "rbxassetid://4483345998",
	PremiumOnly = false
})

local FTab = Window:MakeTab({
	Name = "Fisch",
	Icon = "rbxassetid://4483345998",
	PremiumOnly = false
})

local MiscTab = Window:MakeTab({
	Name = "Misc",
	Icon = "rbxassetid://4483345998",
	PremiumOnly = false
})

-- \\ Misc

local Section = MiscTab:AddSection({
	Name = "external stuff"
})

MiscTab:AddButton({
	Name = "Aimbot Script",
	Callback = function()
		loadstring(game:HttpGet("https://raw.githubusercontent.com/ttwizz/Open-Aimbot/master/source.lua", true))()
  	end    
})

local Section = MiscTab:AddSection({
	Name = "visual stuff"
})

espToggle = MiscTab:AddToggle({
	Name = "Toggle ESP",
	Default = false,
	Callback = function(Value)
		pcall(function()
			toggleEsp(Value)
		end)
	end    
})

local Section = MiscTab:AddSection({
	Name = "humanoid stuff"
})

local WalkspeedValue,JumpPowerValue;

WalkspeedSlider = MiscTab:AddSlider({
	Name = "Walkspeed",
	Min = 0,
	Max = 300,
	Default = 16,
	Color = Color3.fromRGB(116, 130, 255),
	Increment = 1,
	ValueName = "",
	Callback = function(Value)
		WalkspeedValue = Value
	end   
})
JumpPowerSlider = MiscTab:AddSlider({
	Name = "JumpPower",
	Min = 0,
	Max = 200,
	Default = 50,
	Color = Color3.fromRGB(116, 130, 255),
	Increment = 1,
	ValueName = "",
	Callback = function(Value)
		JumpPowerValue = Value
	end    
})

MiscTab:AddButton({
	Name = "Set",
	Callback = function()
		local char = player.Character
 
		if not iswindowactive() then return end
		if ButtonDB then return end
		ButtonDB = true
	   
	  	pcall(function()
			char.Humanoid.UseJumpPower = true

			char.Humanoid.WalkSpeed = WalkspeedValue
			char.Humanoid.JumpPower = JumpPowerSlider
		end)
		
		task.delay(0.1,function()
			ButtonDB = false
		end)
  	end    
})

MiscTab:AddButton({
	Name = "Reset",
	Callback = function()
		local char = player.Character
 
		if not iswindowactive() then return end
		if ButtonDB then return end
		ButtonDB = true
	   
		pcall(function()
			char.Humanoid.UseJumpPower = true

			char.Humanoid.WalkSpeed = 16
			char.Humanoid.JumpPower = 50
		end)
		
		task.delay(0.1,function()
			ButtonDB = false
		end)
  	end    
})

-- \\ Elemental Tycoon

local Section = ETTab:AddSection({
	Name = "teleport stuff"
})

ETTab:AddButton({
	Name = "TP to Chest",
	Callback = function()
		if game.PlaceId ~= 10253248401 then return end
		local char = player.Character

		if not iswindowactive() then return end
		if ButtonDB then return end
		ButtonDB = true
		lastLocation = char.HumanoidRootPart.CFrame
		for _,v in pairs(workspace.Treasure.Chests:GetChildren()) do
			if v:IsA("Part") then
				if not char:IsDescendantOf(workspace.Characters.Players) then continue end
				char.HumanoidRootPart.CFrame = v.CFrame * CFrame.new(0,0,-3)

				task.wait(.25)

				local proxmity = v:WaitForChild("ProximityPrompt")
				proxmity.RequiresLineOfSight = false
				fireproximityprompt(proxmity)
			end
		end

		char.HumanoidRootPart.CFrame = lastLocation
		
		task.delay(0.1,function()
			ButtonDB = false
		end)
  	end    
})

ETTab:AddButton({
	Name = "TP to Crate",
	Callback = function()
		if game.PlaceId ~= 10253248401 then return end
		local char = player.Character

		if not iswindowactive() then return end
		if ButtonDB then return end
		ButtonDB = true
		lastLocation = char.HumanoidRootPart.CFrame
		for _,v in pairs(workspace:GetChildren()) do
			if v.Name == "BalloonCrate" then
				if not char:IsDescendantOf(workspace.Characters.Players) then continue end
				char.HumanoidRootPart.CFrame = v.Crate.CFrame * CFrame.new(0,0,5)

				task.wait(.25)

				local proxmity = v.Crate:WaitForChild("ProximityPrompt")
				proxmity.RequiresLineOfSight = false
				fireproximityprompt(proxmity)
			end
		end

		char.HumanoidRootPart.CFrame = lastLocation
		
		task.delay(0.1,function()
			ButtonDB = false
		end)
  	end    
})

ETTab:AddButton({
	Name = "TP to Powers",
	Callback = function()
		if game.PlaceId ~= 10253248401 then return end
		local char = player.Character

		if not iswindowactive() then return end
		if ButtonDB then return end
		ButtonDB = true
		lastLocation =  player.Character.HumanoidRootPart.CFrame
		for _,v in pairs(workspace.Tycoons:GetDescendants()) do
			if v:IsA("Model")  and string.find(v.Name,"Ability") then
			   if not v.Parent or v.Parent.Name ~= "Assets" or not v:FindFirstChild("Button") then continue end
			   local humrp = player.Character:FindFirstChild("HumanoidRootPart")
			   local toolBeingEquipped = v.Model.Center.SurfaceGui.TextLabel.Text
			   if not humrp then continue end
			   if player.Backpack:FindFirstChild(toolBeingEquipped) or player.Character:FindFirstChild(toolBeingEquipped) then continue end
			   humrp.CFrame = v.Button.CFrame
			   local proxmity = v.Button:WaitForChild("ProximityPrompt")
			   fireproximityprompt(proxmity)
			end
		end

		player.Character.HumanoidRootPart.CFrame = lastLocation
		
		task.delay(0.1,function()
			ButtonDB = false
		end)
  	end    
})

ETTab:AddButton({
	Name = "Steal Dollars",
	Callback = function()
		if game.PlaceId ~= 10253248401 then return end
		local char = player.Character

		if not iswindowactive() then return end
		if ButtonDB then return end
		ButtonDB = true
		lastLocation =  player.Character.HumanoidRootPart.CFrame
		for _,v in pairs(workspace:GetDescendants()) do
			if v:IsA("Part") and v.Name == "Dollar" then
				local humrp = player.Character:FindFirstChild("HumanoidRootPart")
				if not humrp then continue end
				humrp.CFrame = v.CFrame
				task.wait()
			end
		 end

		player.Character.HumanoidRootPart.CFrame = lastLocation
		
		task.delay(0.1,function()
			ButtonDB = false
		end)
  	end    
})

-- \\ Nuke Tycoon Nuclear

local Section = NTNTab:AddSection({
	Name = "teleport stuff"
})

NTNTab:AddButton({
	Name = "Teleport to Gems",
	Callback = function()
		if game.PlaceId ~= 7920018625 then return end
		local char = player.Character

		if not iswindowactive() then return end
		if ButtonDB then return end
		ButtonDB = true

		for _,v in pairs(workspace.RobbingFolder:GetDescendants()) do
			if v:IsA("BoolValue") and v.Name == "Chosen" then
			   if v.Value and v.Parent.Name ~= player.Team.Name then
				   local humrp = player.Character:FindFirstChild("HumanoidRootPart")
				   if not humrp then continue end
				   humrp.CFrame = v.Parent.CFrame
			   end
			end
		end
		
		task.delay(0.1,function()
			ButtonDB = false
		end)
  	end    
})

NTNTab:AddButton({
	Name = "Teleport Back to Base",
	Callback = function()
		if game.PlaceId ~= 7920018625 then return end
		local char = player.Character

		if not iswindowactive() then return end
		if ButtonDB then return end
		ButtonDB = true

		local plrBase = workspace["The Nuke Tycoon Entirely Model"].Tycoons:WaitForChild(player.Team.Name)
		player.Character.HumanoidRootPart.CFrame = plrBase.Essentials.Spawn.CFrame
		
		task.delay(0.1,function()
			ButtonDB = false
		end)
  	end    
})

NTNTab:AddButton({
	Name = "Teleport to Planes",
	Callback = function()
		if game.PlaceId ~= 7920018625 then return end
		local char = player.Character

		if not iswindowactive() then return end
		if ButtonDB then return end
		ButtonDB = true

		local plrBase = workspace["The Nuke Tycoon Entirely Model"].Tycoons:WaitForChild(player.Team.Name)
		local Plane_Spawner = plrBase.PurchasedObjects:FindFirstChild("Plane_Spawner")
	   if Plane_Spawner then
		   player.Character.HumanoidRootPart.CFrame = Plane_Spawner.Korpi.Korpsii.HumanoidRootPart.CFrame * CFrame.new(0,0,-8)
	   else
		   warn("ERROR TELEPORTING TO PLANES: COULDN'T FIND IT!")
	   end
		
		task.delay(0.1,function()
			ButtonDB = false
		end)
  	end    
})

NTNTab:AddButton({
	Name = "Steal Cash Bonus",
	Callback = function()
		if game.PlaceId ~= 7920018625 then return end
		local char = player.Character

		if not iswindowactive() then return end
		if ButtonDB then return end
		ButtonDB = true

		lastLocation =  player.Character.HumanoidRootPart.CFrame
		player.Character.HumanoidRootPart.CFrame = CFrame.new( -820.199646, 347.196136, 329.985718)
		task.wait(0.1)
		player.Character.HumanoidRootPart.CFrame = lastLocation
		
		task.delay(0.1,function()
			ButtonDB = false
		end)
  	end    
})

local SelectedBase;
NTNTab:AddButton({
	Name = "TP To Selected Base",
	Callback = function()
		if game.PlaceId ~= 7920018625 then return end
		local char = player.Character

		if not iswindowactive() then return end
		if ButtonDB then return end
		ButtonDB = true

		local getBase = workspace["The Nuke Tycoon Entirely Model"].Tycoons:FindFirstChild(SelectedBase)
		if getBase then
		   player.Character.HumanoidRootPart.CFrame = getBase.Essentials.Spawn.CFrame
		elseif selectABase.Default == "Volcano" then
		   player.Character.HumanoidRootPart.CFrame = CFrame.new( -820.199646, 347.196136, 329.985718)
		end
		
		task.delay(0.1,function()
			ButtonDB = false
		end)
  	end    
})

local Section = NTNTab:AddSection({
	Name = "cool stuff"
})

AutoClickDropper = NTNTab:AddToggle({
	Name = "Toggle Click Dropper",
	Default = false,
	Callback = function(Value)
		if game.PlaceId ~= 7920018625 then return end
		local plrBase = workspace["The Nuke Tycoon Entirely Model"].Tycoons:WaitForChild(player.Team.Name)
		local detector = plrBase.PurchasedObjects.Mine.Clicker
		if Value then
			task.spawn(function ()
				pcall(function()
					repeat
						task.wait(1.5)
						fireclickdetector(detector,99999)
					until not AutoClickDropper.Default
				end)
			end)
		end
	end    
})

local Section = NTNTab:AddSection({
	Name = "setting stuff"
})

selectABase = NTNTab:AddDropdown({
	Name = "Select a Base",
	Default = "Base 1",
	Options = {"Volcano","Base 1","Base 2","Base 3","Base 4","Base 5","Base 6"},
	Callback = function(Value)
		SelectedBase = Value
	end   
})

local stopLoop = false
toggleDoorCollide = NTNTab:AddToggle({
	Name = "Toggle Door Collision",
	Default = false,
	Callback = function(Value)
		if game.PlaceId ~= 7920018625 then return end
		if Value then
			if stopLoop then
				stopLoop = false
			end
			for _,v in pairs(workspace["The Nuke Tycoon Entirely Model"].Tycoons:GetChildren()) do
				local getOwnerDoor = v.PurchasedObjects:FindFirstChild("OwnerDoor")
				local getOfficeDoor = v.PurchasedObjects:FindFirstChild("OfficeDoor")
				task.spawn(function ()
					while task.wait() do
						if stopLoop then
							return
						end
						if getOwnerDoor then
							getOwnerDoor.Left.CanCollide = false
						else
							getOwnerDoor = v.PurchasedObjects:FindFirstChild("OwnerDoor")
						end
						if getOfficeDoor then
							getOfficeDoor.Left.CanCollide = false
						else
							getOfficeDoor = v.PurchasedObjects:FindFirstChild("OfficeDoor")
						end
					end
				end)
			end
		else
			stopLoop = true

			for _,v in pairs(workspace["The Nuke Tycoon Entirely Model"].Tycoons:GetChildren()) do
				local getOwnerDoor = v.PurchasedObjects:FindFirstChild("OwnerDoor")
				local getOfficeDoor = v.PurchasedObjects:FindFirstChild("OfficeDoor")

				if getOwnerDoor then
					getOwnerDoor.Left.CanCollide = true
				end
				if getOfficeDoor then
					getOfficeDoor.Left.CanCollide = true
				end
			end
		end
	end    
})

NTNTab:AddSlider({
	Name = "Gem Steal Duration",
	Min = 0,
	Max = 5,
	Default = 5,
	Color = Color3.fromRGB(116, 130, 255),
	Increment = 1,
	ValueName = "Seconds" ,
	Callback = function(Value)
		if game.PlaceId ~= 7920018625 then return end
		for _,v in pairs(workspace.RobbingFolder:GetDescendants()) do
			if v:IsA("ProximityPrompt") then
				v.HoldDuration = Value
			end
		end
	end    
})

-- // YBA

local function createItemVisual(tool)
	task.wait(.3)

	for _,v in pairs(tool:GetDescendants()) do
		if v.Name == "ESP" then
			v:Destroy()
		end
	end

	local proxPrompt
	for _,v in pairs(tool:GetChildren()) do
		if v:IsA("ProximityPrompt") and v.Enabled == true then
			proxPrompt = v
			break
		end
	end 

	local Overhead = Instance.new("BillboardGui")
	local TextLabel = Instance.new("TextLabel")

	Overhead.Parent = tool
	Overhead.Name = "ESP"
	Overhead.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
	Overhead.Active = true
	Overhead.Adornee = tool.PrimaryPart
	Overhead.AlwaysOnTop = true
	Overhead.LightInfluence = 1.000
	Overhead.Size = UDim2.new(0, 400, 0, 30)
	Overhead.StudsOffset = Vector3.new(0, 0, 0)

	TextLabel.Parent = Overhead
	TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	TextLabel.BackgroundTransparency = 1.000
	TextLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
	TextLabel.BorderSizePixel = 0
	TextLabel.Size = UDim2.new(1, 0, 1)
	TextLabel.Font = Enum.Font.SourceSans
	TextLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
	TextLabel.TextScaled = true
	TextLabel.TextSize = 14.000
	TextLabel.TextStrokeTransparency = 0.000
	TextLabel.TextWrapped = true
	pcall(function ()
		TextLabel.Text = proxPrompt.ObjectText.." | Studs: "..math.floor((tool.PrimaryPart.Position - player.Character:WaitForChild("HumanoidRootPart").Position).Magnitude)
	end)
	task.spawn(function ()
		pcall(function ()
			repeat
				task.wait()
	
				local humrp = player.Character:FindFirstChild("HumanoidRootPart")
				if not humrp then continue end
				TextLabel.Text = proxPrompt.ObjectText.." | Studs: "..math.floor((tool.PrimaryPart.Position - humrp.Position).Magnitude)
	
			until not Overhead:IsDescendantOf(tool)
		end)
	end)
 end

local Section = YBATab:AddSection({
	Name = "cool stuff"
})

local childAddedConn_;
toggleItemEsp = YBATab:AddToggle({
	Name = "Toggle Item Esp",
	Default = false,
	Callback = function(Value)
		if game.PlaceId ~= 2809202155 then return end
		if Value then
			for _,v in pairs(workspace.Item_Spawns.Items:GetChildren()) do
				task.spawn(createItemVisual,v)
			end

			childAddedConn_ = workspace.Item_Spawns.Items.ChildAdded:Connect(function (child)
				task.spawn(createItemVisual,child)
			end)
		else
			if childAddedConn_ then
				childAddedConn_:Disconnect()
			end

			for _,v in pairs(workspace.Item_Spawns.Items:GetDescendants()) do
				if v.Name == "ESP" then
					v:Destroy()
				end
			end
		end
	end    
})

-- // Fisch

local islandList = {}
if game.PlaceId == 16732694052 then
	for _,v in pairs(workspace.world.spawns:GetChildren()) do
		if v:IsA("Folder") then
			if v.Name ~= "TpSpots" or v.Name ~= "TeleportDelay" then
				table.insert(islandList,v.Name)
			end
		end
	end 
end

local Section = FTab:AddSection({
	Name = "teleport stuff"
})

local selectedIsland;
local selectAIsland = FTab:AddDropdown({
	Name = "Select a Island",
	Default = "None",
	Options = islandList,
	Callback = function(Value)
		selectedIsland = Value
	end    
})

FTab:AddButton({
	Name = "TP To Selected Island",
	Callback = function()
		if game.PlaceId ~= 16732694052 then return end
		local char = player.Character

		if not iswindowactive() then return end
		if ButtonDB then return end
		ButtonDB = true

		pcall(function ()
			local getIsland = workspace.world.spawns:FindFirstChild(selectedIsland)
			if getIsland then
				player.Character.HumanoidRootPart.CFrame = getIsland.spawn.CFrame
			end
		 end)
		
		task.delay(0.1,function()
			ButtonDB = false
		end)
  	end    
})

local Section = FTab:AddSection({
	Name = "cool stuff"
})

local childAddedConn_2;
toggleEasyFishBar = FTab:AddToggle({
	Name = "Toggle Easy Fish Bar",
	Default = false,
	Callback = function(Value)
		if game.PlaceId ~= 16732694052 then return end
		if Value then
			childAddedConn_2 = player.PlayerGui.ChildAdded:Connect(function (child)
				if child.Name == "reel" then
					task.wait(.25)
					child.bar.playerbar.Size = UDim2.new(1, 0, 1.3, 0)
				end
			end)
		else
			if childAddedConn_2 then
				childAddedConn_2:Disconnect()
			end
		end
	end    
})

local characterAddedConn_;
local toggleOxygen = FTab:AddToggle({
	Name = "Toggle Oxygen",
	Default = true,
	Callback = function(Value)
		if game.PlaceId ~= 16732694052 then return end
		if not Value then
			player.Character.client.oxygen.Disabled = true
			characterAddedConn_ = player.CharacterAdded:Connect(function (char)
				char.client.oxygen.Disabled = true
			end)
		else
			player.Character.client.oxygen.Disabled = false
			if characterAddedConn_ then
				characterAddedConn_:Disconnect()
			end
		end
	end    
})
