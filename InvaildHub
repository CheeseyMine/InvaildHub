local GS = game:GetService("GuiService")
local VIM = game:GetService("VirtualInputManager")

local player = game.Players.LocalPlayer

local ButtonDB = false

local SelectedPlayer;
local lastLocation;

local espToggle;
local selectABase;
local AutoClickDropper;
local WalkspeedSlider;
local JumpPowerSlider;
local toggleDoorCollide;
local toggleEasyFishBar;
local toggleItemEsp;
local toggleItemFarm;
local toggleAutoReel;
local toggleAutoCast;
local toggleAutoShake;

local library = loadstring(game:GetObjects("rbxassetid://7657867786")[1].Source)()
local Wait = library.subs.Wait

local function toggleEsp(bool)
	local function createVisuals(target)
		if target:FindFirstChild("ESP") then return end
		local eTorso = target:FindFirstChild("Torso")
		repeat
			task.wait()
			if not game.Players:FindFirstChild(target.Name) then
				return
			end
			if not eTorso then
				eTorso = target:FindFirstChild("Torso")
			end
		until  eTorso

		local highlight = Instance.new("Highlight")
		highlight.FillColor = Color3.fromRGB(255,255,255)
		highlight.FillTransparency = 0.5
		highlight.OutlineTransparency = 0
		highlight.OutlineColor = Color3.fromRGB(255,255,255)
		highlight.Parent = target
		highlight.Name = "ESP"

		local Overhead = Instance.new("BillboardGui")
		local TextLabel = Instance.new("TextLabel")

		Overhead.Parent = target
		Overhead.Name = "ESP"
		Overhead.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
		Overhead.Active = true
		Overhead.Adornee = target:WaitForChild("Torso")
		Overhead.AlwaysOnTop = true
		Overhead.LightInfluence = 1.000
		Overhead.Size = UDim2.new(0, 400, 0, 30)
		Overhead.StudsOffset = Vector3.new(0, 6, 0)

		TextLabel.Parent = Overhead
		TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		TextLabel.BackgroundTransparency = 1.000
		TextLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
		TextLabel.BorderSizePixel = 0
		TextLabel.Size = UDim2.new(1, 0, 1)
		TextLabel.Font = Enum.Font.SourceSans
		pcall(function ()
			local ehum = target:FindFirstChild("Humanoid")
			local humrp = player.Character:FindFirstChild("HumanoidRootPart")
			local ehumrp = target:FindFirstChild("HumanoidRootPart")
			repeat
				task.wait()
				if not game.Players:FindFirstChild(target.Name) then
					return
				end
				if not ehum then
					ehum = target:FindFirstChild("Humanoid")
				end
				if not ehumrp then
					ehumrp = target:FindFirstChild("HumanoidRootPart")
				end
				if not humrp then
					humrp = player.Character:FindFirstChild("HumanoidRootPart")
				end
			until ehum or ehumrp

			TextLabel.Text = target.Name.." | HP: "..math.floor(ehum.Health).." | Studs: "..math.floor((humrp.Position - ehumrp.Position).Magnitude)
		end)
		TextLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
		TextLabel.TextScaled = true
		TextLabel.TextSize = 14.000
		TextLabel.TextStrokeTransparency = 0.000
		TextLabel.TextWrapped = true

		task.spawn(function ()
			pcall(function()
				repeat
					task.wait()
					local humrp = player.Character:FindFirstChild("HumanoidRootPart")
					local ehumrp = target:FindFirstChild("HumanoidRootPart")
					if not humrp or not ehumrp then continue end
					TextLabel.Text = target.Name.." | HP: "..math.floor(target.Humanoid.Health).." | Studs: "..math.floor((humrp.Position - ehumrp.Position).Magnitude)
				until not Overhead:IsDescendantOf(target)
			end)
		end)
	end

	if bool then
		for _,plrs in pairs(game.Players:GetPlayers()) do
			if plrs ~= player then
				createVisuals(plrs.Character)

				local conn_;
				conn_ = plrs.CharacterAdded:Connect(function (newChar)
					createVisuals(newChar)
				end)

				task.spawn(function ()
					repeat
						task.wait()
					until not espToggle.Value
					conn_:Disconnect()
				end)
			end
		end

		local conn_1;
		conn_1 = game.Players.PlayerAdded:Connect(function (newPlr)
			local conn_;
			conn_ = newPlr.CharacterAdded:Connect(function (newChar)
				createVisuals(newChar)
			end)

			task.spawn(function ()
				repeat
					task.wait()
				until not espToggle.Value
				conn_:Disconnect()
				if conn_1 then
					conn_1:Disconnect()
				end
			end)
		end)
	else
		for _,plrs in pairs(game.Players:GetPlayers()) do
			if plrs ~= player then
				for _,chars in pairs(plrs.Character:GetDescendants()) do
					if chars.Name == "ESP" then
						chars:Destroy()
					end
				end 
			end
		end
	end
end

local Window = library:CreateWindow({
	Name = "Invaild Hub",
	Themeable = {
	Info = ""
	}
})

local GeneralTab = Window:CreateTab({
	Name = "General",
})

-- // General

local GeneralVisualSection = GeneralTab:CreateSection({
	Name = "Visuals"
})

 espToggle = GeneralVisualSection:AddToggle({
	Name = "ESP",
	Flag = "VisualSection_Flag",
	Value = false,
	Callback = function(Value)
		pcall(function()
			toggleEsp(Value)
		end)
	end
})

local GeneralHumanoidSection = GeneralTab:CreateSection({
	Name = "Humanoid"
})

WalkspeedSlider = GeneralHumanoidSection:AddSlider({
	Name = "Walkspeed",
	Flag = "HumanoidSection_WalkspeedFlag",
	Value = 16,
	Min = 0,
	Max = 350,
})

JumpPowerSlider = GeneralHumanoidSection:AddSlider({
	Name = "JumpPower",
	Flag = "HumanoidSection_JumpPowerFlag",
	Value = 50,
	Min = 0,
	Max = 200,
})

GeneralHumanoidSection:AddButton({
	Name = "Set",
	Callback = function()
		local char = player.Character
 
		if not iswindowactive() then return end
		if ButtonDB then return end
		ButtonDB = true
	   
		pcall(function()
			char.Humanoid.UseJumpPower = true

			char.Humanoid.WalkSpeed = WalkspeedSlider.Get()
			char.Humanoid.JumpPower = JumpPowerSlider.Get()
		end)
		
		task.delay(0.1,function()
			ButtonDB = false
		end)
	end
})

GeneralHumanoidSection:AddButton({
	Name = "Reset",
	Callback = function()
		local char = player.Character
 
		if not iswindowactive() then return end
		if ButtonDB then return end
		ButtonDB = true
	   
		pcall(function()
			char.Humanoid.UseJumpPower = true

			char.Humanoid.WalkSpeed = 16
			char.Humanoid.JumpPower = 50
		end)
		
		task.delay(0.1,function()
			ButtonDB = false
		end)
	end
})

-- // Elemental Tycoon

if game.GameId == 10253248401 then
	local ETTab = Window:CreateTab({
		Name = "Elemental Tycoon",
	})
	
	local ETTeleportSection = ETTab:CreateSection({
		Name = "Teleport"
	})
	
	ETTeleportSection:AddButton({
		Name = "TP to Chest",
		Callback = function()
			local char = player.Character
	
			if not iswindowactive() then return end
			if ButtonDB then return end
			ButtonDB = true
			lastLocation = char.HumanoidRootPart.CFrame
			for _,v in pairs(workspace.Treasure.Chests:GetChildren()) do
				if v:IsA("Part") then
					if not char:IsDescendantOf(workspace.Characters.Players) then continue end
					char.HumanoidRootPart.CFrame = v.CFrame * CFrame.new(0,0,-3)
	
					task.wait(.25)
	
					local proxmity = v:WaitForChild("ProximityPrompt")
					proxmity.RequiresLineOfSight = false
					fireproximityprompt(proxmity)
				end
			end
	
			char.HumanoidRootPart.CFrame = lastLocation
			
			task.delay(0.1,function()
				ButtonDB = false
			end)
		end
	})
	
	ETTeleportSection:AddButton({
		Name = "TP to Crate",
		Callback = function()
			local char = player.Character
	
			if not iswindowactive() then return end
			if ButtonDB then return end
			ButtonDB = true
			lastLocation = char.HumanoidRootPart.CFrame
			for _,v in pairs(workspace:GetChildren()) do
				if v.Name == "BalloonCrate" then
					if not char:IsDescendantOf(workspace.Characters.Players) then continue end
					char.HumanoidRootPart.CFrame = v.Crate.CFrame * CFrame.new(0,0,5)
	
					task.wait(.25)
	
					local proxmity = v.Crate:WaitForChild("ProximityPrompt")
					proxmity.RequiresLineOfSight = false
					fireproximityprompt(proxmity)
				end
			end
	
			char.HumanoidRootPart.CFrame = lastLocation
			
			task.delay(0.1,function()
				ButtonDB = false
			end)
		end
	})
	
	ETTeleportSection:AddButton({
		Name = "TP to Powers",
		Callback = function()
			local char = player.Character
	
			if not iswindowactive() then return end
			if ButtonDB then return end
			ButtonDB = true
			lastLocation = char.HumanoidRootPart.CFrame
			for _,v in pairs(workspace.Tycoons:GetDescendants()) do
				if v:IsA("Model")  and string.find(v.Name,"Ability") then
				   if not v.Parent or v.Parent.Name ~= "Assets" or not v:FindFirstChild("Button") then continue end
				   local humrp = player.Character:FindFirstChild("HumanoidRootPart")
				   local toolBeingEquipped = v.Model.Center.SurfaceGui.TextLabel.Text
				   if not humrp then continue end
				   if player.Backpack:FindFirstChild(toolBeingEquipped) or player.Character:FindFirstChild(toolBeingEquipped) then continue end
				   humrp.CFrame = v.Button.CFrame
				   local proxmity = v.Button:WaitForChild("ProximityPrompt")
				   fireproximityprompt(proxmity)
				end
			end
	
			char.HumanoidRootPart.CFrame = lastLocation
			
			task.delay(0.1,function()
				ButtonDB = false
			end)
		end
	})
	
	ETTeleportSection:AddButton({
		Name = "Steal Dollars",
		Callback = function()
			local char = player.Character
	
			if not iswindowactive() then return end
			if ButtonDB then return end
			ButtonDB = true
			lastLocation = char.HumanoidRootPart.CFrame
			for _,v in pairs(workspace:GetDescendants()) do
				if v:IsA("Part") and v.Name == "Dollar" then
					local humrp = player.Character:FindFirstChild("HumanoidRootPart")
					if not humrp then continue end
					humrp.CFrame = v.CFrame
					task.wait()
				end
			 end
	
			char.HumanoidRootPart.CFrame = lastLocation
			
			task.delay(0.1,function()
				ButtonDB = false
			end)
		end
	})
end

-- // Nuke Tycoon Nuclear

if game.PlaceId == 7920018625 then
	local NTNTab = Window:CreateTab({
		Name = "Nuke Tycoon Nuclear",
	})
	
	local NTNTeleportSection = NTNTab:CreateSection({
		Name = "Teleport"
	})
	
	NTNTeleportSection:AddButton({
		Name = "Teleport To Gems",
		Callback = function()
			local char = player.Character
	
			if not iswindowactive() then return end
			if ButtonDB then return end
			ButtonDB = true
			for _,v in pairs(workspace.RobbingFolder:GetDescendants()) do
				if v:IsA("BoolValue") and v.Name == "Chosen" then
				   if v.Value and v.Parent.Name ~= player.Team.Name then
					   local humrp = player.Character:FindFirstChild("HumanoidRootPart")
					   if not humrp then continue end
					   humrp.CFrame = v.Parent.CFrame
				   end
				end
			end
			
			task.delay(0.1,function()
				ButtonDB = false
			end)
		end
	})
	
	NTNTeleportSection:AddButton({
		Name = "Teleport Back To Base",
		Callback = function()
			local char = player.Character
	
			if not iswindowactive() then return end
			if ButtonDB then return end
			ButtonDB = true
			local plrBase = workspace["The Nuke Tycoon Entirely Model"].Tycoons:WaitForChild(player.Team.Name)
			player.Character.HumanoidRootPart.CFrame = plrBase.Essentials.Spawn.CFrame
			
			task.delay(0.1,function()
				ButtonDB = false
			end)
		end
	})
	
	NTNTeleportSection:AddButton({
		Name = "Teleport To Planes",
		Callback = function()
			local char = player.Character
	
			if not iswindowactive() then return end
			if ButtonDB then return end
			ButtonDB = true
	
			local plrBase = workspace["The Nuke Tycoon Entirely Model"].Tycoons:WaitForChild(player.Team.Name)
			local Plane_Spawner = plrBase.PurchasedObjects:FindFirstChild("Plane_Spawner")
		   if Plane_Spawner then
			   player.Character.HumanoidRootPart.CFrame = Plane_Spawner.Korpi.Korpsii.HumanoidRootPart.CFrame * CFrame.new(0,0,-8)
		   else
			   warn("ERROR TELEPORTING TO PLANES: COULDN'T FIND IT!")
		   end
			
			task.delay(0.1,function()
				ButtonDB = false
			end)
		end
	})
	
	NTNTeleportSection:AddButton({
		Name = "Steal Cash Bonus",
		Callback = function()
			local char = player.Character
	
			if not iswindowactive() then return end
			if ButtonDB then return end
			ButtonDB = true
			
			lastLocation =  player.Character.HumanoidRootPart.CFrame
			player.Character.HumanoidRootPart.CFrame = CFrame.new( -820.199646, 347.196136, 329.985718)
			task.wait(0.1)
			player.Character.HumanoidRootPart.CFrame = lastLocation
			
			task.delay(0.1,function()
				ButtonDB = false
			end)
		end
	})
	
	NTNTeleportSection:AddButton({
		Name = "Teleport to Selected Base",
		Callback = function()
			local char = player.Character
	
			if not iswindowactive() then return end
			if ButtonDB then return end
			ButtonDB = true
			
			local getBase = workspace["The Nuke Tycoon Entirely Model"].Tycoons:FindFirstChild(selectABase.Get())
			if getBase then
			   player.Character.HumanoidRootPart.CFrame = getBase.Essentials.Spawn.CFrame
			elseif selectABase.Get() == "Volcano" then
			   player.Character.HumanoidRootPart.CFrame = CFrame.new( -820.199646, 347.196136, 329.985718)
			end
			
			task.delay(0.1,function()
				ButtonDB = false
			end)
		end
	})
	
	local NTNOtherSection = NTNTab:CreateSection({
		Name = "Other"
	})
	
	NTNOtherSection:AddToggle({
		Name = "Toggle Click Dropper",
		Flag = "NTNOtherSection_ClickDropper",
		Callback = function(Value)
			local plrBase = workspace["The Nuke Tycoon Entirely Model"].Tycoons:WaitForChild(player.Team.Name)
			local detector = plrBase.PurchasedObjects.Mine.Clicker
			if Value then
				task.spawn(function ()
					repeat
						task.wait(1.5)
						fireclickdetector(detector,99999)
					until not AutoClickDropper.Get()
				end)
			end
		end
	})
	
	local stopLoop = false
	toggleDoorCollide = NTNOtherSection:AddToggle({
		Name = "Toggle Door Collision",
		Flag = "DoorCollision_Flag",
		Value = false,
		Callback = function(Value)
			if Value then
				if stopLoop then
					stopLoop = false
				end
				for _,v in pairs(workspace["The Nuke Tycoon Entirely Model"].Tycoons:GetChildren()) do
					local getOwnerDoor = v.PurchasedObjects:FindFirstChild("OwnerDoor")
					local getOfficeDoor = v.PurchasedObjects:FindFirstChild("OfficeDoor")
					task.spawn(function ()
						while task.wait() do
							if stopLoop then
								return
							end
							if getOwnerDoor then
								getOwnerDoor.Left.CanCollide = false
							else
								getOwnerDoor = v.PurchasedObjects:FindFirstChild("OwnerDoor")
							end
							if getOfficeDoor then
								getOfficeDoor.Left.CanCollide = false
							else
								getOfficeDoor = v.PurchasedObjects:FindFirstChild("OfficeDoor")
							end
						end
					end)
				end
			else
				stopLoop = true
	
				for _,v in pairs(workspace["The Nuke Tycoon Entirely Model"].Tycoons:GetChildren()) do
					local getOwnerDoor = v.PurchasedObjects:FindFirstChild("OwnerDoor")
					local getOfficeDoor = v.PurchasedObjects:FindFirstChild("OfficeDoor")
	
					if getOwnerDoor then
						getOwnerDoor.Left.CanCollide = true
					end
					if getOfficeDoor then
						getOfficeDoor.Left.CanCollide = true
					end
				end
			end
		end
	})
	
	local NTNSettingSection = NTNTab:CreateSection({
		Name = "Setting"
	})
	
	selectABase = NTNSettingSection:AddDropdown({
		Name = "Select a Base",
		Flag = "NTNSettingSection_SelectABase",
		Value = "Base 1",
		List = {"Volcano","Base 1","Base 2","Base 3","Base 4","Base 5","Base 6"}
	})
	
	NTNSettingSection:AddSlider({
		Name = "Gem Steal Duration",
		Flag = "NTNSettingSection_StealGemDuration",
		Value = 5,
		Min = 0,
		Max = 5,
		Callback = function(Value)
			for _,v in pairs(workspace.RobbingFolder:GetDescendants()) do
				if v:IsA("ProximityPrompt") then
					v.HoldDuration = Value
				end
			end
		end
	})
end

-- // YBA

if game.GameId == 2809202155 then
	local YBATab = Window:CreateTab({
		Name = "YBA",
	})

	local YBAVisualSection = YBATab:CreateSection({
		Name = "Visuals"
	})

	local function createItemVisual(tool)
		task.wait(.3)
	
		for _,v in pairs(tool:GetDescendants()) do
			if v.Name == "ESP" then
				v:Destroy()
			end
		end
	
		local proxPrompt
		for _,v in pairs(tool:GetChildren()) do
			if v:IsA("ProximityPrompt") and v.Enabled == true then
				proxPrompt = v
				break
			end
		end 
	
		local Overhead = Instance.new("BillboardGui")
		local TextLabel = Instance.new("TextLabel")
	
		Overhead.Parent = tool
		Overhead.Name = "ESP"
		Overhead.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
		Overhead.Active = true
		Overhead.Adornee = tool.PrimaryPart
		Overhead.AlwaysOnTop = true
		Overhead.LightInfluence = 1.000
		Overhead.Size = UDim2.new(0, 400, 0, 30)
		Overhead.StudsOffset = Vector3.new(0, 0, 0)
	
		TextLabel.Parent = Overhead
		TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		TextLabel.BackgroundTransparency = 1.000
		TextLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
		TextLabel.BorderSizePixel = 0
		TextLabel.Size = UDim2.new(1, 0, 1)
		TextLabel.Font = Enum.Font.SourceSans
		TextLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
		TextLabel.TextScaled = true
		TextLabel.TextSize = 14.000
		TextLabel.TextStrokeTransparency = 0.000
		TextLabel.TextWrapped = true
		pcall(function ()
			TextLabel.Text = proxPrompt.ObjectText.." | Studs: "..math.floor((tool.PrimaryPart.Position - player.Character:WaitForChild("HumanoidRootPart").Position).Magnitude)
		end)
		task.spawn(function ()
			pcall(function ()
				repeat
					task.wait()
		
					local humrp = player.Character:FindFirstChild("HumanoidRootPart")
					if not humrp then continue end
					TextLabel.Text = proxPrompt.ObjectText.." | Studs: "..math.floor((tool.PrimaryPart.Position - humrp.Position).Magnitude)
		
				until not Overhead:IsDescendantOf(tool)
			end)
		end)
	 end

	 local childAddedConn_;
	 toggleItemEsp = YBAVisualSection:AddToggle({
		 Name = "Toggle Item Esp",
		 Flag = "Itemesp_Flag",
		 Value = false,
		 Callback = function(Value)
			if Value then
				for _,v in pairs(workspace.Item_Spawns.Items:GetChildren()) do
					task.spawn(createItemVisual,v)
				end
	
				childAddedConn_ = workspace.Item_Spawns.Items.ChildAdded:Connect(function (child)
					task.spawn(createItemVisual,child)
				end)
			else
				if childAddedConn_ then
					childAddedConn_:Disconnect()
				end
	
				for _,v in pairs(workspace.Item_Spawns.Items:GetDescendants()) do
					if v.Name == "ESP" then
						v:Destroy()
					end
				end
			end
		 end
	 })
end

-- // Fisch

if game.GameId == 5750914919 then
	local FTab = Window:CreateTab({
		Name = "Fisch",
	})

	local FischTeleportSection = FTab:CreateSection({
		Name = "Teleport"
	})

	local FischOtherSection = FTab:CreateSection({
		Name = "Other"
	})

	local FischSettingsSection = FTab:CreateSection({
		Name = "Settings"
	})

	local FischAutoFarmSection = FTab:CreateSection({
		Name = "Auto Farm"
	})

	local selectAIsland = FischSettingsSection:AddDropdown({
		Name = "Select a Location",
		Flag = "FischSettingsSection_SelectAIsland",
		Value = "Moosewood",
		List = {
			"Moosewood",
			"Mushgrove",
			"Roslit",
			"Snowcap",
			"Sunstone",
			"Terrapin",
			"The Depths",
			"Vertigo",
			"Statue",
			"Uncharted",
			"Ancient Isles",
			"Crafting",
			"Ancient Archive",
			"Harvester's Spike",
			"Brine",
			"Desolate Deep",
			"Keeper's Alter",
			"Trident Room",
			"The Arch",
			"Desolate Deep Shop",
			"End of Depth Maze",
			"Forsaken Shores"
		}
	})

	local selectAIMerchant = FischSettingsSection:AddDropdown({
		Name = "Select a Merchant",
		Flag = "FischSettingsSection_selectAMerchant",
		Value = "Moosewood",
		List = {
			"Moosewood",
			"Forsaken Shores",
			"Ancient Isles",
			"Vertigo","Snowcap",
			"The Depths",
			"Desolate Deep",
			"Volcano",
			"Sunstone",
			"Desolate Deep Shop"
		}
	})

	local selectANpc = FischSettingsSection:AddDropdown({
		Name = "Select a Merchant",
		Flag = "FischSettingsSection_selectANpc",
		Value = "Phineas",
		List = {
			"Phineas",
			"Angler",
			"Appraiser",
			"Daisy",
			"Moosewood Inn Keeper",
			"Roslit Inn Keeper",
			"Snowcap inn Keeper",
			"Desolate Deep Inn Keeper",
			"Forsaken Inn Keeper",
			"AncientIsle Inn Keeper",
			"Mod's Lantern Keeper",
			"Pierre",
			"Shipwright",
			"Agaric",
			"Alfie",
			"Orc",
			"Wilson",
			"Kenith",
			"Merlin",
			"Caleia",
			"Jack Marrow",
			"Chiseler",
		}
	})

	FischTeleportSection:AddButton({
		Name = "Teleport to Selected NPC",
		Callback = function()
			local char = player.Character
	
			if not iswindowactive() then return end
			if ButtonDB then return end
			ButtonDB = true

			local locationPos = {
				["Phineas"] = CFrame.new(472.16119384765625, 150.693359375, 274.2929992675781),
				["Angler"] = CFrame.new(480.1129150390625, 150.50100708007812, 298.4060363769531),
				["Appraiser"] = CFrame.new(448.3273010253906, 150.5386962890625, 207.1830291748047),
				["Daisy"] = CFrame.new(583.37890625, 165.49075317382812, 216.81448364257812),
				["Moosewood Inn Keeper"] = CFrame.new(488.9857177734375, 150.70001220703125, 232.86424255371094),
				["Roslit Inn Keeper"] = CFrame.new(-1509.99267578125, 133.00003051757812, 628.8194580078125),
				["Snowcap Inn Keeper"] = CFrame.new(2663.392578125, 155.16500854492188, 2396.169189453125),
				["Desolate Deep Inn Keeper"] = CFrame.new(-1655.33642578125, -214.18502807617188, -2831.457275390625),
				["AncientIsles Inn Keeper"] = CFrame.new(6044.849609375, 197.64480590820312, 334.3267822265625),
				["Forsaken Inn Keeper"] = CFrame.new(-2475.80029296875, 133.00003051757812, 1569.952392578125),
				["Mod's Lantern Keeper"] = CFrame.new(-39.49514389038086, -246.5999755859375, 198.9759063720703),
				["Pierre"] = CFrame.new(391.49237060546875, 135.3483428955078, 200.10107421875),
				["Shipwright"] = CFrame.new(357.97259521484375, 133.615966796875, 258.154541015625),
				["Agaric"] = CFrame.new(2594.98095703125, 132.67874145507812, -730.0322875976562),
				["Alfie"] = CFrame.new(-1516.2005615234375, 141.5347900390625, 763.6912841796875),
				["Orc"] = CFrame.new(-1847.372802734375, 165.7111358642578, 161.55313110351562),
				["Wilson"] = CFrame.new(2937.43701171875, 280.78369140625, 2567.6845703125),
				["Kenith"] = CFrame.new(-1146.0289306640625, 134.4999542236328, -1073.3331298828125),
				["Merlin"] = CFrame.new(-931.6629638671875, 225.90130615234375, -993.1806030273438),
				["Caleia"] = CFrame.new(981.6041259765625, 131.3201904296875, -1233.817138671875),
				["Jack Marrow"] = CFrame.new(-2826.740966796875, 214.64915466308594, 1519.2017822265625),
				["Chiseler"] = CFrame.new(6083.68310546875, 194.98013305664062, 293.7948913574219),
			}
			
			pcall(function ()
				local getLocation = locationPos[selectANpc.Get()]
				char.HumanoidRootPart.CFrame = getLocation
			 end)
			
			task.delay(0.1,function()
				ButtonDB = false
			end)
		end
	})

	FischTeleportSection:AddButton({
		Name = "Teleport to Selected Location",
		Callback = function()
			local char = player.Character
	
			if not iswindowactive() then return end
			if ButtonDB then return end
			ButtonDB = true

			local locationPos = {
				["Brine"] = CFrame.new(-1794.11816, -142.862152, -3302.82104),
				["Desolate Deep"] = CFrame.new(-1510.892333984375, -234.71023559570312, -2852.90966796875),
				["Keeper's Alter"] = CFrame.new(1296.3203125, -805.2923583984375, -298.93670654296875),
				["The Arch"] = CFrame.new(998.9654541015625, 131.32020568847656, -1237.12939453125),
				["Desolate Deep Shop"] = CFrame.new(-978.800659, -244.911102, -2700.67529),
				["End of Depth Maze"] = CFrame.new(1688.20068, -902.402039, 1441.45972),
				["Forsaken Shores"] = CFrame.new(-2498.24585, 133.71489, 1624.8551),
				["Moosewood"] = CFrame.new(383.101135, 131.240601, 243.933853),
				["Mushgrove"] = CFrame.new(2501.45386, 130.999985, -720.717834),
				["Roslit"] = CFrame.new(-1476.51611, 133.499969, 671.668884),
				["Snowcap"] = CFrame.new(2649.0625, 142.283798, 2521.448),
				["Harvester's Spike"] = CFrame.new(-1254.56738, 137.527222, 1554.79138),
				["Statue"] = CFrame.new(72.8843689, 141.929962, -1028.41479),
				["Sunstone"] = CFrame.new(-933.259705, 128.143951, -1119.52063),
				["Terrapin"] = CFrame.new(-147.19691467285156, 145.21534729003906, 1911.84814453125),
				["The Depths"] = CFrame.new(568.15271, -701.881104, 1230.8479),
				["Trident Room"] = CFrame.new(-1479.49316, -225.710663, -2391.39355),
				["Vertigo"] = CFrame.new(-112.007278, -515.2995, 1040.32788),
				["Volcano"] = CFrame.new(-1888.5234375, 167.78240966796875, 329.2350158691406),
				["Uncharted"] = CFrame.new(4011.312255859375, 136.99728393554688, 99.37255859375),
				["Ancient Isles"] = CFrame.new(6056.0048828125, 195.28012084960938, 278.5785827636719),
				["Ancient Archive"] = CFrame.new(-3155.022216796875, -754.8182373046875, 2193.136962890625),
				["Crafting"] = CFrame.new(-3160.040283203125, -747.223388671875, 1690.9775390625),
			}
			
			pcall(function ()
				local getLocation = locationPos[selectAIsland.Get()]
				char.HumanoidRootPart.CFrame = getLocation
			 end)
			
			task.delay(0.1,function()
				ButtonDB = false
			end)
		end
	})

	FischOtherSection:AddButton({
		Name = "Sell All Fishes",
		Callback = function()
			if not iswindowactive() then return end
			if ButtonDB then return end
			ButtonDB = true

			task.delay(0.4,function()
				ButtonDB = false
			end)

			local event = workspace.world.npcs["Marc Merchant"].merchant.sellall
			event:InvokeServer()
		end
	})

	FischOtherSection:AddButton({
		Name = "Sell Holding",
		Callback = function()
			if not iswindowactive() then return end
			if ButtonDB then return end
			ButtonDB = true

			task.delay(0.4,function()
				ButtonDB = false
			end)

			local event = workspace.world.npcs["Marc Merchant"].merchant.sell
			event:InvokeServer()
		end
	})

	FischOtherSection:AddButton({
		Name = "Appraise Fish",
		Callback = function()
			if not iswindowactive() then return end
			if ButtonDB then return end
			ButtonDB = true

			task.delay(0.4,function()
				ButtonDB = false
			end)

			local event = workspace.world.npcs:WaitForChild("Appraiser").appraiser.appraise
				event:InvokeServer()
		end
	})

	FischTeleportSection:AddButton({
		Name = "Teleport to Selected Merchant",
		Callback = function()
			local char = player.Character
	
			if not iswindowactive() then return end
			if ButtonDB then return end
			ButtonDB = true
			
			local locationPos = {
				["Moosewood"] = CFrame.new(464.311127, 150.62973, 230.48822),
				["Forsaken Shores"] = CFrame.new(-2508.26758, 135.790741, 1577.14185),
				["Vertigo"] = CFrame.new(-138.504807, -515.174377, 1135.73242),
				["Snowcap"] = CFrame.new(2713.1272, 157.140839, 2377.79932),
				["The Depths"] = CFrame.new(950.812866, -711.576111, 1265.45996),
				["Desolate Deep"] = CFrame.new(-1659.4303, -213.979431, -2824.6084),
				["Desolate Deep Shop"] = CFrame.new(-981.0797119140625, -244.91098022460938, -2698.3544921875),
				["Sunstone"] = CFrame.new(-928.85614, 131.078827, -1108.20117),
				["Ancient Isles"] = CFrame.new(6076.65087890625, 194.98013305664062, 307.15045166015625),
			}

			pcall(function ()
				local merchant = selectAIMerchant.Get()
				char.HumanoidRootPart.CFrame = locationPos[merchant]
			 end)
			
			task.delay(0.1,function()
				ButtonDB = false
			end)
		end
	})

	local lastHumanoidPos = nil;

	local autoReelConn_;
	toggleAutoReel = FischAutoFarmSection:AddToggle({
		Name = "Toggle Auto Reel",
		Flag = "toggleAutoReel_Flag",
		Value = false,
		Callback = function(Value)
			if Value then
				autoReelConn_ = player.PlayerGui.ChildAdded:Connect(function (child)
					if child.Name == "reel" then
						task.wait(.25)
						child.bar.playerbar.Size = UDim2.new(1, 0, 1.3, 0)
						child.bar.fish:GetPropertyChangedSignal("Position"):wait()
						game.ReplicatedStorage.events.reelfinished:FireServer(100, true)

						if lastHumanoidPos then
							player.Character.HumanoidRootPart.CFrame = lastHumanoidPos
							lastHumanoidPos = nil
						end
					end
				end)
			else
				if autoReelConn_ then
					autoReelConn_:Disconnect()
				end
			end
		end
	})

	local autoShakeConn_;
	local autoShakeConn_2;
	toggleAutoShake = FischAutoFarmSection:AddToggle({
		Name = "Toggle Auto Shake",
		Flag = "toggleAutoShake_Flag",
		Value = false,
		Callback = function(Value)
			if Value then
				autoShakeConn_ = player.PlayerGui.ChildAdded:Connect(function (child)
					if child.Name == "shakeui" then
						autoShakeConn_2 = child.safezone.ChildAdded:Connect(function (child)
							if child.Name == "button" then
								task.wait(0.3)
								
								GS.SelectedObject = child
								VIM:SendKeyEvent(true, Enum.KeyCode.Return, false, game)
								VIM:SendKeyEvent(false, Enum.KeyCode.Return, false, game)
		
								task.wait(250.1 - (172 + 78))
								
								if lastHumanoidPos then
									player.Character.HumanoidRootPart.CFrame = lastHumanoidPos
								end

								GS.SelectedObject = nil
							end
						end)
					end
				end)
			else
				if autoShakeConn_ then
					autoShakeConn_:Disconnect()
				end
				if autoShakeConn_2 then
					autoShakeConn_2:Disconnect()
				end
			end
		end
	})

	local autoCastConn_;
	local autoCastConn_2;
	toggleAutoCast = FischAutoFarmSection:AddToggle({
		Name = "Toggle Auto Cast",
		Flag = "toggleAutoCast_Flag",
		Value = false,
		Callback = function(Value)
			if Value then
				local plrRod

				for _,v in pairs(player.Character:GetChildren()) do
					if v:IsA("Tool") and v.Name:lower():find("rod") then
						plrRod = v
					end
				end

				autoCastConn_ = player.Character.ChildAdded:Connect(function(child)
					if child:IsA("Tool") and child.Name:lower():find("rod") then
						plrRod = child
					end
				end)
				autoCastConn_2 = player.Character.ChildRemoved:Connect(function(child)
					if child:IsA("Tool") and child.Name:lower():find("rod") then
						plrRod = nil
					end
				end)
				
				repeat
					task.wait()
					if not plrRod then continue end
					local getValues = plrRod:FindFirstChild("values")
					if not getValues then continue end
					if not getValues.bite.Value and not getValues.casted.Value then
						lastHumanoidPos = player.Character.HumanoidRootPart.CFrame
						plrRod.events.cast:FireServer(58.5 + 42)
					end

				until not toggleAutoCast.Get()
			else
				if autoCastConn_ then
					autoCastConn_:Disconnect()
				end
				if autoCastConn_2 then
					autoCastConn_2:Disconnect()
				end
			end
		end
	})

	FischAutoFarmSection:AddButton({
		Name = "Anti-Afk",
		Callback = function()
			loadstring(
                game:HttpGet("https://raw.githubusercontent.com/hassanxzayn-lua/Anti-afk/main/antiafkbyhassanxzyn")
            )()
		end
	})

	local characterAddedConn_;
	local toggleOxygen = FischSettingsSection:AddToggle({
		Name = "Toggle Oxygen",
		Flag = "Oxygen_Flag",
		Value = true,
		Callback = function(Value)
			if not Value then
				player.Character.client.oxygen.Disabled = true
				characterAddedConn_ = player.CharacterAdded:Connect(function (char)
					char.client.oxygen.Disabled = true
				end)
			else
				player.Character.client.oxygen.Disabled = false
				if characterAddedConn_ then
					characterAddedConn_:Disconnect()
				end
			end
		end
	})
end
